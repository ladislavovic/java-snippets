<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.0.xsd">

    <!--
        Connection Pool. This is normal javax.sql.DataSource implementation.        
    -->
    <bean id="mySqlDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
        destroy-method="close">
        <property name="driverClass" value="com.mysql.jdbc.Driver" />
        <property name="jdbcUrl" value="jdbc:mysql://pcna205d.vsb.cz:3306/pios" />
        <property name="user" value="root" />
        <property name="password" value="root" />
        <property name="minPoolSize" value="5" />
        <property name="maxPoolSize" value="10" />
        <property name="initialPoolSize" value="5" />
        
        <!-- When there are no available connections, pool acquire
             another connection. But acquire a connection is very expensive
             operation. It is better to acquire connection in batches. This
             option specify the size of batche.
        -->
        <property name="acquireIncrement" value="3" />
        
        <property name="preferredTestQuery" value="SELECT 1" />
        <property name="testConnectionOnCheckout" value="true" />
    </bean>

    <!--
        JPA EntityManagerFactory.
    -->
    <bean id="entityManagerFactory"
        class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="mySqlDataSource" />
        <property name="jpaVendorAdapter">
            <bean
                class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="true" /> <!-- Show sql in the log. -->
                <property name="generateDdl" value="true" /> <!-- Create / alter relevant tables after JPA start. -->
                <property name="database" value="MYSQL" /> <!-- Database name. -->
                <property name="databasePlatform"
                    value="org.hibernate.dialect.MySQLDialect" /> <!-- Vendor specivic database name. -->
            </bean>
        </property>
        
        <!-- 
            Properties for creating EntityManagerFactory. Usually there are
            properties specific for persistency Vendor.
        -->
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">create-drop</prop>
                <prop key="hibernate.format_sql">true</prop> <!-- pretty print of sql in log -->
            </props>
        </property>

    </bean>

    <!--
        Is it realy necessarry now? I think it is on by default in spring
        4.

        Activates various annotations to be detected in bean classes for
        eg @Autowired
    -->
    <context:annotation-config />

    <context:component-scan base-package="cz.kul.snippets" />

</beans>